{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAIC,QAAQF,SAASC,aAAT,CAAuB,QAAvB,CAAZ;AACA,IAAIE,i/CAAJ;AAgDA;AACA,IAAIC,UAAU,EAAd;;AAEA;;AAEA,IAAIC,IAAI,CAAR;;AAEA;AACA;;AAEA,IAAIC,OAAO,SAAPA,IAAO,GAAM;AACbC,eAAW,YAAM;AACb,YAAGJ,OAAOE,CAAP,MAAc,IAAjB,EAAsB;AAClB;AACAD,sBAAUA,UAAU,MAApB;AACH,SAHD,MAGO,IAAGD,OAAOE,CAAP,MAAc,GAAjB,EAAqB;AACxBD,sBAAUA,UAAU,OAApB,CADwB,CACI;AAC/B,SAFM,MAEA;AACH;AACAA,sBAAUA,UAAUD,OAAOE,CAAP,CAApB;AACH;AACD;AACAN,aAAKS,SAAL,GAAiBJ,OAAjB;AACA;AACA;AACAF,cAAMM,SAAN,GAAkBL,OAAOM,SAAP,CAAiB,CAAjB,EAAmBJ,CAAnB,CAAlB;AACAK,eAAOC,QAAP,CAAgB,CAAhB,EAAkB,MAAlB,EAfa,CAea;AAC1BZ,aAAKY,QAAL,CAAc,CAAd,EAAgB,MAAhB;AACA,YAAGN,IAAIF,OAAOS,MAAP,GAAgB,CAAvB,EAAyB;AACrB;AACAN;AACH;AACDD,YAAIA,IAAI,CAAR;AACH,KAtBD,EAsBE,CAtBF;AAuBH,CAxBD;AAyBAC","file":"main.f2fd3369.map","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector('#html');\r\nlet style = document.querySelector('#style');\r\nlet string = `\r\n/* 你好，我是小伊\r\n * 接下来，我演示一下我的前端功底\r\n * 首先我要准备一个div\r\n **/\r\n#div1{\r\n    border: 1px solid red;\r\n    width: 200px;\r\n    height: 200px;\r\n}\r\n/* 接下来我把div变成太极图\r\n * 注意看好了\r\n * 首先，把div变成一个圆\r\n **/\r\n#div1{\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n    border: none;\r\n}\r\n/* 太极是阴阳形成的\r\n * 一黑一白\r\n * 使用 css gradient background generator 背景渐变\r\n**/\r\n#div1{\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 加两个神秘的东西*/\r\n#div1::before{\r\n    width: 100px;\r\n    height: 100px;\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #000;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    width: 100px;\r\n    height: 100px;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #fff;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n}\r\n`;\r\n//借助string2来解决回车替换<br>问题\r\nlet string2 = '';\r\n\r\n//string = string.replace(/\\n/g, \"<br>\");//正则表达式把所有回车换成<br>，html例用<br>表示回车\r\n\r\nlet n = 0;\r\n\r\n//因为<br>需要作为一个整体被识别，所以将下面语句放在方法里更好，不然遇到回车会出现一个<\r\n//html.innerHTML = string.substring(0,n);\r\n\r\nlet step = () => {\r\n    setTimeout(() => {\r\n        if(string[n] === \"\\n\"){\r\n            //如果是回车，就不照搬\r\n            string2 = string2 + '<br>';\r\n        } else if(string[n] === \" \"){\r\n            string2 = string2 + '&nbsp';//html中空格的转义\r\n        } else {\r\n            //如果不是回车，就照搬\r\n            string2 = string2 + string[n];\r\n        }\r\n        //html.innerHTML = string.substring(0,n);\r\n        html.innerHTML = string2;\r\n        //css中不能有html标签如<br>，所以用string.substring(0,n)\r\n        //且，前面的汉字会影响css，所以加上了注释标签/**/ \r\n        style.innerHTML = string.substring(0,n);\r\n        window.scrollTo(0,999999);//屏幕自动下移\r\n        html.scrollTo(0,999999);\r\n        if(n < string.length - 1){\r\n            //只要没结束就一直调用step\r\n            step();\r\n        }\r\n        n = n + 1;\r\n    },0);\r\n};\r\nstep();"]}